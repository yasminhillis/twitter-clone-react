[{"/Users/yasminhillis/Desktop/twitter-clone-react/src/index.js":"1","/Users/yasminhillis/Desktop/twitter-clone-react/src/App.js":"2","/Users/yasminhillis/Desktop/twitter-clone-react/src/reportWebVitals.js":"3","/Users/yasminhillis/Desktop/twitter-clone-react/src/Sidebar/Sidebar.js":"4","/Users/yasminhillis/Desktop/twitter-clone-react/src/SidebarOption/SidebarOption.js":"5","/Users/yasminhillis/Desktop/twitter-clone-react/src/Feed/Feed.js":"6","/Users/yasminhillis/Desktop/twitter-clone-react/src/Widgets/Widgets.js":"7","/Users/yasminhillis/Desktop/twitter-clone-react/src/Home/Home.js":"8","/Users/yasminhillis/Desktop/twitter-clone-react/src/TweetBox/TweetBox.js":"9","/Users/yasminhillis/Desktop/twitter-clone-react/src/Tweet/Tweet.js":"10","/Users/yasminhillis/Desktop/twitter-clone-react/src/firbase.js":"11"},{"size":500,"mtime":1607688832650,"results":"12","hashOfConfig":"13"},{"size":279,"mtime":1607780509404,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1607688832652,"results":"15","hashOfConfig":"13"},{"size":1471,"mtime":1607721137825,"results":"16","hashOfConfig":"13"},{"size":340,"mtime":1607704461237,"results":"17","hashOfConfig":"13"},{"size":1764,"mtime":1607892142155,"results":"18","hashOfConfig":"13"},{"size":882,"mtime":1607854643747,"results":"19","hashOfConfig":"13"},{"size":249,"mtime":1607722667080,"results":"20","hashOfConfig":"13"},{"size":1562,"mtime":1607883213137,"results":"21","hashOfConfig":"13"},{"size":2926,"mtime":1607893122866,"results":"22","hashOfConfig":"13"},{"size":605,"mtime":1607855693567,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"5zn4am",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/yasminhillis/Desktop/twitter-clone-react/src/index.js",[],["50","51"],"/Users/yasminhillis/Desktop/twitter-clone-react/src/App.js",[],"/Users/yasminhillis/Desktop/twitter-clone-react/src/reportWebVitals.js",[],"/Users/yasminhillis/Desktop/twitter-clone-react/src/Sidebar/Sidebar.js",[],"/Users/yasminhillis/Desktop/twitter-clone-react/src/SidebarOption/SidebarOption.js",[],"/Users/yasminhillis/Desktop/twitter-clone-react/src/Feed/Feed.js",["52","53"],"import React, { Component, useEffect, useState } from 'react';\nimport Home from '../Home/Home';\nimport TweetBox from '../TweetBox/TweetBox';\nimport './Feed.css';\nimport FilpMove from 'react-flip-move'\nimport db from '../firbase'\n \nimport Image from '../images/yasmin.jpeg';\n\nimport Tweet from '../Tweet/Tweet';\nconst Feed = () =>  {\n  const [ posts, setPosts ] = useState([])\n  // componentDidMount() {\n  //   // console.log(db.collection('posts'), 'db.collection(posts)');\n  //   db.collection('posts').onSnapshot(snapshot => {\n  //     // console.log(snapshot.docs, 'snapshot.docs');\n  //     snapshot.docs.map(doc => {\n  //       // console.log(doc, 'doc');\n  //       // console.log(doc.data(), 'doc.data()');\n\n  //     })\n  //   })\n  // }\n  useEffect(() => {\n    \n      db.collection('posts').onSnapshot(snapshot => {\n        setPosts(\n          snapshot.docs.map(doc => {\n            // console.log(doc.data(), 'doc.data()');\n            return doc.data()\n          })\n        )\n        // snapshot.docs.map(doc => {\n        //   // console.log(doc.data(), 'doc.data()');\n           \n        // })\n      })\n    \n  }, []);\n\n  console.log(posts, 'posts');\n\n \n    return (\n      <div className='feed'>\n        <Home />\n        <TweetBox />\n       \n        {posts.map(post => (\n          <>\n          <FilpMove>\n           <Tweet\n           key={post.text}\n           profilePic={post.profilePic}\n           displayName={post.displayName}\n           username={post.username}\n           text={post.text}\n           image={post.image}\n           heartCount={post.heart}\n         />\n        \n         </FilpMove>\n         </>\n        ))}\n        {/* <Tweet />\n        <Tweet />\n        <Tweet />\n        <Tweet /> */}\n      </div>\n    );\n  \n}\n\nexport default Feed;\n","/Users/yasminhillis/Desktop/twitter-clone-react/src/Widgets/Widgets.js",[],"/Users/yasminhillis/Desktop/twitter-clone-react/src/Home/Home.js",[],"/Users/yasminhillis/Desktop/twitter-clone-react/src/TweetBox/TweetBox.js",["54"],"import React, { useState, useEffect } from 'react';\nimport './TweetBox.css';\nimport Image from '../images/yasmin.jpeg';\nimport { Avatar, Button } from '@material-ui/core';\nimport db from '../firbase'\nlet docId = ''\n\nconst TweetBox = () => {\n  const [ tweet, setTweet ] = useState('');\n\n  const composeTweet = (e) => {\n    setTweet(e.target.value)\n    // setTweet(\"\")\n  }\n\n  const addTweet = () => {\n    // console.log('hiii');\n    // console.log(tweet.length, 'tweet.length');\n    if(tweet.length > 0){\n      db.collection('posts').add({\n        displayName: \"Yasmin Hillis\",\n        profilePic: \"https://avatars0.githubusercontent.com/u/30685524?s=460&u=fb45f5dc18c7fc8537141e118f0bedb2c5af4348&v=4\", \n        text: tweet, \n        username: \"yasminhillis\",\n      }).then(docRef => {\n        // console.log(docRef.id, 'docRef');\n        docId = docRef.id;\n        console.log(docId, 'docId');\n        // console.log(typeof docId, 'docId');\n      })\n      setTweet(\"\")\n    }\n  \n    \n  }\n\n  return (\n    <div className='tweetBox'>\n      <form action=''  >\n        <div className='tweetBox__input'>\n         \n          <Avatar src={Image}/>\n          <input onChange={composeTweet} value={tweet} type='text' placeholder=\"What's happening\" />\n          \n        </div>\n        {/* <input className=\"tweetBox__image\" type='text' placeholder=\"Optional: Add an image\" /> */}\n        <Button  onClick={addTweet} className='tweetBox_btn' variant='contained'>\n          Tweet\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default TweetBox;\nexport { docId };\n","/Users/yasminhillis/Desktop/twitter-clone-react/src/Tweet/Tweet.js",["55","56"],"import React, { useState, forwardRef } from 'react'; \nimport './Tweet.css'\nimport { Avatar } from '@material-ui/core'\n\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport db from '../firbase';\n\nimport  {docId}  from '../TweetBox/TweetBox'\n\nimport Person from '../images/person.jpg'\n\nconst Tweet = forwardRef(({ profilePic, displayName, username, text, image, heartCount }, ref) => {\n    const [ heartConut, setHeartConut ] = useState(0); \n    \n    const handleHeartClick = () => {\n        console.log(docId, 'docId');\n        if(docId){\n            setHeartConut(heartConut + 1);\n            // const doc = db.collection(\"posts\").doc(docId);\n            // console.log(doc, 'doc777777');\n            // console.log(doc.id, 'doc777777');\n            const doc = db.collection('posts').doc(docId);\n            // console.log(heartConut, 'heartConut');\n            console.log(heartConut, 'heartConutttttttttttttttttttt');\n            doc.update({\n              heart: heartConut + 1\n            });\n            console.log(doc, 'doc'); \n        } else {\n            setHeartConut(heartConut + 1);\n        }\n        \n           \n    }\n\n    // console.log(heartConut, 'heartConutheartConutheartConutheartConutheartConut');\n\n    const handleFilledHeartClick = () => {\n        setHeartConut(heartConut-1)\n    }\n\n    console.log(heartConut, 'heartConut');\n    return (\n        <div className=\"tweet\" ref={ref}>\n            <div className=\"tweet__wrapper\">\n            <div className=\"tweet__header\">\n            <Avatar  className=\"tweet__image\" src={profilePic} />\n            </div>\n\n            \n            <div className=\"tweet__text\">\n            <h2 className=\"tweet__displayName\">{displayName}\n                <span className=\"tweet__username\">@{username}</span>\n            </h2>\n                <p>{text}</p>\n                {image ? (\n                    <img className=\"tweet__image\" style={{width: '201px', height: '175px'}} src={image} />\n                )\n                : null}\n                \n\n            </div>\n            </div>\n            <div className=\"tweet__icons\">\n            <ChatBubbleOutlineIcon />\n            <RepeatIcon />\n            { heartConut === 0 || heartConut % 2 === 0 ? <FavoriteBorderIcon onClick={handleHeartClick}/> :  <FavoriteIcon onClick={handleFilledHeartClick} style={{color: '#e0245e'}}/>}\n            { heartConut > 0 ?  <span style={{marginLeft: '-107px'}}>{heartCount}</span> : null}\n\n            {  heartConut >= 1000 ?  <span style={{marginLeft: '-107px'}}>{heartCount/1000}</span> : null }\n            <PublishIcon />\n\n            </div>\n       \n           \n        </div>\n        \n    )\n})\n\nexport default Tweet;","/Users/yasminhillis/Desktop/twitter-clone-react/src/firbase.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":26},{"ruleId":"61","severity":1,"message":"65","line":8,"column":8,"nodeType":"63","messageId":"64","endLine":8,"endColumn":13},{"ruleId":"61","severity":1,"message":"66","line":1,"column":27,"nodeType":"63","messageId":"64","endLine":1,"endColumn":36},{"ruleId":"61","severity":1,"message":"67","line":14,"column":8,"nodeType":"63","messageId":"64","endLine":14,"endColumn":14},{"ruleId":"68","severity":1,"message":"69","line":61,"column":21,"nodeType":"70","endLine":61,"endColumn":107},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Image' is defined but never used.","'useEffect' is defined but never used.","'Person' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]